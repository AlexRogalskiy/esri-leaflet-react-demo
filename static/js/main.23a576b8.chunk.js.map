{"version":3,"sources":["Map.js","App.js","reportWebVitals.js","index.js"],"names":["Map","mapRef","useRef","useEffect","current","console","log","VERSION","DefaultIcon","Icon","iconUrl","icon","shadowUrl","iconShadow","iconAnchor","popupAnchor","Marker","prototype","options","map","LeafletMap","setView","basemap","BasemapLayer","addLayer","FeatureLayer","url","addTo","bindPopup","layer","feature","properties","CITY_NAME","POP","toLocaleString","className","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAkDeA,MAzCf,WACE,IAAMC,EAASC,iBAAO,MAqCtB,OAnCAC,qBAAU,WAER,GAAuB,OAAnBF,EAAOG,QAAkB,CAC3BC,QAAQC,IAAI,uBAAwBC,KAGpC,IAAIC,EAAc,IAAIC,OAAK,CACzBC,QAASC,IACTC,UAAWC,IACXC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,MAEpBC,SAAOC,UAAUC,QAAQP,KAAOH,EAEhC,IAAMW,EAAM,IAAIC,MAAWnB,EAAOG,SAClCe,EAAIE,QAAQ,CAAC,UAAW,UAAW,GAGnC,IAAMC,EAAU,IAAIC,IAAa,WACjCJ,EAAIK,SAASF,GAGF,IAAIG,IAAa,CAC1BC,IACE,8FACDC,MAAMR,GAENS,WAAU,SAAUC,GACrB,MAAM,cAAN,OACEA,EAAMC,QAAQC,WAAWC,UAD3B,uCAE+BH,EAAMC,QAAQC,WAAWE,IAAIC,eAAe,MAF3E,cAKH,CAACjC,IAEG,qBAAKkC,UAAU,MAAMC,IAAKnC,KCpCpBoC,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,OCMSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.23a576b8.chunk.js","sourcesContent":["// @refresh reset\nimport { useEffect, useRef } from \"react\";\nimport { Map as LeafletMap, Icon, Marker } from \"leaflet\";\nimport { VERSION, BasemapLayer, FeatureLayer } from \"esri-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nimport icon from \"leaflet/dist/images/marker-icon.png\";\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\n\nfunction Map() {\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    // debugger;\n    if (mapRef.current !== null) {\n      console.log(\"esri-leaflet version\", VERSION);\n\n      // The default icon does not work due to webpack issues\n      let DefaultIcon = new Icon({\n        iconUrl: icon,\n        shadowUrl: iconShadow,\n        iconAnchor: [12, 41],\n        popupAnchor: [0, -41],\n      });\n      Marker.prototype.options.icon = DefaultIcon;\n\n      const map = new LeafletMap(mapRef.current);\n      map.setView([53.35014, -6.266155], 8);\n\n      // Add a basemap\n      const basemap = new BasemapLayer(\"Streets\");\n      map.addLayer(basemap);\n\n      // Add a Feature Layer\n      const fl = new FeatureLayer({\n        url:\n          \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/SampleWorldCities/MapServer/0\",\n      }).addTo(map);\n\n      fl.bindPopup(function (layer) {\n        return `<p><strong>${\n          layer.feature.properties.CITY_NAME\n        }</strong><br /> Population: ${layer.feature.properties.POP.toLocaleString(\"en\")}</p>`;\n      });\n    }\n  }, [mapRef]);\n\n  return <div className=\"map\" ref={mapRef}></div>;\n}\n\nexport default Map;\n","import \"./App.scss\";\nimport Map from \"./Map.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}